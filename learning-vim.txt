When you enter vim, you usually enter in normal mode 

There are different modes, you can enter to any of them pressing the key `esc`

- insert mode, type "i" while in normal mode. To leave insert mode, press escape
- line mode, type ":" while in normal mode, after a command completes in the line mode, you are returned to normal mode. You can also leave command mode by pressing Escape 

Vim modes:
- Normal/Command Mode 
- Insert mode 
- Line mode 

There are other modes too ...

Esential vim navigation commands

	To move down a line, press "j"
	To move up a line, press "k"
	To move to the right, press "l"
	To move to the left, press "h"

	To move all the way to the top of the file, press and hold "k"
	To move all the way to the botton of the file, press and hold "j"
	Press control + "f" to page down
	Press control + "b" to page up

	Move one word to the right with "w" (sequence of non black charactares, to ignores puntuantion use "W")
	Move one word to the left with "b" (or "B" to ignore puntuation)
	To keep the cursor on the current position and move the screen to the center press "z" + enter
	To move to the beginning of the line press "0"
	To go to the very first character of the line use "^"
	To go to the end of the line use "$"
	To jump to a specific line use <line_number> + gg or <line_number> + G
	To go to the beginnig of the file type "gg"
	To go to the very end of the file type "G"
	To jump to a specific line use ":" + <line_number>
	To jump to the end of the file ":" + $
	To know how many lines are in the file, press "control" + g
	To get more information use "control" + G
	To turn the ruler on use ":" + "set ruler"
	To turn the ruler off use ":" + "set noruler" 
	To toggle the ruler on/off use ":" + "set ruler!"

Deleting in vim 
	To delete a character in normal or command mode, press "x"
	To delete a character right before your cursor, press "X"
	To delete a world where your cursor is located, press "d" + "w"
	To delete the current line and the line below it, press "d" + "j"
	To delete the current line and the line above it, press "d" + "k"
	To delete where the cursor is to the beginning of the line, press "d" + 0
	To delete where teh cursor is to the end of the line, press "d" + $ or just "D"
	To delete the entire line, just type "dd"
	To delete n number of lines just below where the cursor is and below, press <number_of_lines> + dd

	[count]operation[count]{motion}
	3w = Repeat word motion 3 times
	d3w = Delete the 3w motion
	2d3w = Delete the 3w motion 2 times

	To repeat the previous command, press "."

Help 
	To get help in vim, type ":help" + Enter
	To get help for a specific command, type ":help [command]" + Enter
	To get back to the previos section on the help page, press "Ctrl" + o
	To jump forward, use "Ctrl" + i
	To move to the file where you type the :help command, press ctrl +w + ctrl +w
	to use auto completion suggestion, type :h [command] + ctrl d , to navigate across them , press tab , and to select it, press enter 


Cut, Copy and Paste 

 	To cut a line, press "dd"
	To paste the line, press "p", it puts your text after the cursor 
	"P" puts the text before the cursor
	To copy a line, press y 

	Standard vs Vim 
	cut = delete 
	copy = yank 
	paste = put

	To duplicate a line, press "yy"
	
	To undo your last change, use "u"
	to redo the action use ctrl + r
	


	registers are storage locations 
	- "" contains last operated on text 

	. Numbered registers: "0 ... 9"
	. Named registers: "a...z"
	- to display the registers use ":reg [register(s)]"

Inserting, changing, prelacing and joining 

	- Insert
	To jump into the first non blank character of the line and enter insert mode, press "I"
	To append a character just after the cursor position, press "a"
	To append words at the end of the line, press "A"
	To enter insert mode just in the line below your cursor, press "o"
	To enter insert mode just above the cursor line, press "O"
	To repite a word, character or anything on insert mode, press [number] +i , type the word to repeat, and then press "esc"
	To repite just directly on the line below, press [number] + o, type the word to repeat and press "esc"


	- Replace mode: To enter this mode use "R"
	each character you type replace an existing character
	To replace one character only, use "r" instead
	To change an exact word, press "cw"
	"c$" replace the current cursor position to the end of the line, or you can type "C"
	cc replace the entire line
	if you want to change 3 line, use 3cc
	To switch between lower case or upper case, use "~"
	to change the entire word, use "g~w"
	to change the entire line, use "g~$" or "g~~"

	To change all the word to upper case, use "gUw"
	To change all the line to upper case, use "gUU"
	To change the word to lower case, use "guw"
	To change the line to lower case, use "guu"

	To join lines toguether, use J, it will add it with spaces
	To join them without spaces, use "gJ" instead

Search, Find and Replace 
	To search forward or to the right in the line, use f + <char>, is case sensitive
	to search backwards on the same line, use F + <char>
	To repeat the search operation on the same line forward, use ;
	To repeat it backwards, use ,
	To move the cursor one charatec before the searched character, use t instead: t + <char>
	To use the same operation but backwards, use T, it will place the cursor after the coincidence
	To search a word, use /, to move forward between the coincidences, use n, to search it backwards, use N 
	To disable highlight until the next search, use :nohls
	To disable highlight, use :set nohls

	To perform a backwards search, use ?<search>
	To search for the next occurrence of the word under or near the cursor, type *
	To search for the before ocurrence of the word, use #

	To delete a word based on a search an regarding the cursor position, type d/<search>	    
	-Find and replace 

	To replace a text use :s/<old>/<new> # this will be only for the current line and only the first ocurrence
	To replace all the ocurrences on the line :s/<old>/<new>/g

	To replace the ocurrences on a range of lines, you can use :[range]s/<old>/<new>/[flags], for example, to change the characters on the first 5 lines use :1,5s/for/FOR/g + enter
	special character ranges: 
		$ = last line; .= current line; % = All lines (entire file) or 1,$
		Examples:
			.,$s/<old>/<new>/[flags]
			:%s/<old>/<new>/[flags]
	You can specify a pattern to substitute only on that range 
	-> /PATTERN-1/,/PATTERN-2/
	example:
		:/Global/,/Local/s/net/org/g
	this will make changes only on the lines in between the search patterns
	example:
		:/Local/,$s/net/org/g
	This will change all the matches in the section beggining with Local until the end of the file
	To replace special characters 
	string to replace => MAIL_PATH=/usr/local/mail ; we want to replace usr/local/mail with /var/spool/usr/local 
	The hard way
	:s/\/var\/spool\/usr\/local/
	The easiest way
	:s#/var/spool#/usr/local#

	To type on line number :set number, to turn it of :set nonumber

	Summary
	- f{char} - Forward search 
	- F{char} - Reverse search
	- t{char} - Forward till search 
	- T{char} - Reverse till search 
	- ; - Repeat in the same direction
	- , - Repeat in the opposite direction 
	- /{pattern} - Forward search 
	- ?{pattern} - Reverse search 
	- n - Repeat search in the same direction 
	- N - Repeat search in the oposite direction 
	- * - Forward search for word
	- # - Reverse search for word
	Substitute command 
	- Format:
		:[range]s/{pattern}/{string}/[flags]
	- Global substitution
		:%s/{pattern}/{string}/g


	Text Objects
	{operator}{a}{object}
	{operator}{i}{object}

	Examples
		daw = Delete a word
		ciw = Change inner word
	To delete a sentence including the white space you can use "das"
	to ignore the white space use "dis"

	To delete a paragraph you can use "dap" or "dip"

	To change the content inside the brackets, use ci[ or ci]
	To delete the content of the brackets including the brackets, use di[ or di]
	To change the content inside the parentesis, use ci( or ci) 
	To change the content inside the brackets <> use ci< or ci>
	to change the content between a tag object ex: <p>, use [operator]it or [operator]at	    To change the content of the curly braces {} , a{ or i}
	To change the content of the "", use a" or i", for single quotes ', use a' or i'
	To change teh content of the backtip, use a` or i`

	summary: a includes the object delimeter, i is just for the content inside


Macros 
	Start recording :q{register}
	Append to a macro :q{Capital_register}
	Playback :@{register}
	Repeat last played macro :@@
	control the area where the macro will operate :[range]normal @{register}
	ex :3,47 normal @q
	Repeating a macro :[count]@[register]
	Save macros in vimrc file: let @[REGISTER] = 'keystrokes'



Visual mode 
	
	There are three versions of visual mode 
	- Characterwise visual mode : v 
	- Linewise visual mode: V
	- Blockwise visual mode: Ctrl+v

	characterwise visual mode, press "o" to move to the extreme of the highlighted section
	
	to see the shiftwidth configured type :set shiftwitdth?
	to see the tab stop configured type :set tabstop?


	Buffers
	
	To list the opened buffers, type :buffers or :ls, more information with :help buffers
	To open a specific buffer, press :buffer + <buffer_number> or :b<number> or :b <buffer_name>
	To open anther file, use :e <file_name>
	to move to the next buffer, use :bnext or :bn
	To move to the previous buffer, use :bprevious or :bp
	To move to the first buffer, use :bfirts or :bf
	To move to the last buffer, use :blast or :bf
	To switch between two opened buffers, use ctrl + ^

	To abandon all of your changes on all of your buffers, use :qall!
	To save all your changes to all of your buffers, use :wall
	
	To open a file and not switch to it, use :badd <file>
	To delete a file of the buffer, use :bdelete <file> or :bd <number/file>

	You can also use the range command with bd, example: :1,3bd
	To delete all the buffers, use :%bd
	
	To execute a command in all buffers, use :bufdo <command>

	The pipe symbol (|) in vim is the command separator
	To execute a global replacement on all buffers use :bufdo %s/#/@/g | w

	
	To get a file explorer window use :explore or :E, to escape the view, use :bd

	Summary

	:e / :edit
	shell exapnsion
	:ls / :buffers
	:b / :buffer
	:bn / :bnext
	:bp / :bprevious
	:bl / :blast
	:bf / :bfirst
	:badd
	:bd / :bdelete
	:bufdo


	Vim Windows

	A window is a view of a buffer

	To split the window horizontally, type :sp or :split, this will show the same buffer in  two different views
	To split the window and open a new file, type :sp <file_name> 
	To split the windows vertically, type :vs or :vsplit, this will show the same buffer in two different views
	To close the window use :q or ctrl-w + q
	To close all the other windows that are not the active one use :on or :only or ctrl-w o

	You can use 
		Ctrl-w + h
		Ctrl-w + j
		Ctrl-w + k
		Ctrl-w + l
			To cycle to the opened windows as the vim navigation

	To increase the height of the window use ctrl-w +
	To decrease the height use ctrl-w -
	To increase the width of the window use ctrl-w >
	To decrease the width of the window use ctrl-w <
	To maximize the height of the window use ctrl-w _
	To maximize the width of the window use ctrl-w | 
	To make all the windows the same size use ctrl-w =
	To rotate the buffers to the right, use ctrl-w r
	To rotate the rotation in the oposite direction, use ctrl-w R
	To open all your buffer in your buffer list use :ba or :ball 

	To execute a command on all the windows use :windo <command>

	
Plugins
	To see the path allowed for the plugins type :set packpath
	where packages are stored
		{packpath}/pack/{package-name}
	Example:
		~\AppData\Local\nvim\pack\git-plugins
	
	To make a plugin automatically start, place in under the start directory
	Example: ~\AppData\Local\nvim\pack\my-plugin\start\{plugin-name}
	Otherwise, place it under \opt\ directory
	
	Loading optional plugin 
	:packadd {plugin-directory-name} 






	


